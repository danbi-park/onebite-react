// 동기, 비동기

// task A, B, C가 있다면
// 동기(Default)
// 여러 개의 작업이 있을 때 이 작업들을 순서대로 한 번에 하나씩만 처리하는 방식
// A -> B -> C 순서로 처리됨


console.log("A");

// 비동기로 처리하는 방식
setTimeout(() => {
    console.log("B");
}, 3000);

console.log("C");

// 자바스크립트 엔진에서 비동기 함수를 만나면 브라우저에 탑재되어 있는 Web APIs에게 실행해 달라고 부탁한다.
// 이때 끝나고 실행할 콜백 함수도 같이 넘겨준다.



// 자바스크립트 엔진은 싱글 쓰레드인데, 어떻게 여러 쓰레드를 사용하지 않고 동시에 처리됐을까?
// -> 비동기 작업들은 자바스크립트 엔진이 아닌 Web APIs에서 실행됨

// Web APIs는 웹 브라우저가 직접 관리하는 별도의 영역임

// 비동기(Non-Blocking)
// 여러 개의 작업이 있을 때 이 작업들을 동시에 처리하는 방식
// A, B, C 동시에 처리됨

// 비동기 처리 방식
// 1. 콜백 함수
// 2. Promise
// 3. Async/Await



// setTimeout(() => console.log("A"), 1000);

// for (let i = 0; i < 1e1; i++) {
// } // 매우 긴 동기 코드

// console.log("B");
